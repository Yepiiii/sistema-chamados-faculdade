#!/usr/bin/env pwsh
# Script para testar todas as implementa√ß√µes recentes do sistema mobile
# Timeline, Coment√°rios, Upload de Arquivos, Polling e Notifica√ß√µes

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  TESTE DE IMPLEMENTA√á√ïES RECENTES" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se estamos no diret√≥rio correto
$currentDir = Get-Location
if (-not (Test-Path "SistemaChamados.Mobile.csproj")) {
    Write-Host "‚ùå ERRO: Execute este script no diret√≥rio SistemaChamados.Mobile" -ForegroundColor Red
    exit 1
}

Write-Host "üìã CHECKLIST DE IMPLEMENTA√á√ïES:" -ForegroundColor Yellow
Write-Host ""
Write-Host "‚úÖ 1. Timeline de Hist√≥rico (HistoricoItemDto)" -ForegroundColor Green
Write-Host "‚úÖ 2. Thread de Coment√°rios (ComentarioDto + ComentarioService)" -ForegroundColor Green
Write-Host "‚úÖ 3. Upload de Imagens/Arquivos (AnexoDto + AnexoService)" -ForegroundColor Green
Write-Host "‚úÖ 4. Polling Service (Timer 5 min)" -ForegroundColor Green
Write-Host "‚úÖ 5. Notifica√ß√µes Locais Android (NotificationService)" -ForegroundColor Green
Write-Host ""

# Verificar arquivos cr√≠ticos
Write-Host "üîç VERIFICANDO ARQUIVOS CR√çTICOS..." -ForegroundColor Cyan
Write-Host ""

$criticalFiles = @(
    @{ Path = "Models\DTOs\HistoricoItemDto.cs"; Feature = "Timeline de Hist√≥rico" },
    @{ Path = "Models\DTOs\ComentarioDto.cs"; Feature = "Thread de Coment√°rios" },
    @{ Path = "Services\Comentarios\ComentarioService.cs"; Feature = "Thread de Coment√°rios" },
    @{ Path = "Models\DTOs\AnexoDto.cs"; Feature = "Upload de Arquivos" },
    @{ Path = "Services\Anexos\AnexoService.cs"; Feature = "Upload de Arquivos" },
    @{ Path = "Models\DTOs\AtualizacaoDto.cs"; Feature = "Polling" },
    @{ Path = "Services\Polling\PollingService.cs"; Feature = "Polling" },
    @{ Path = "Services\Notifications\INotificationService.cs"; Feature = "Notifica√ß√µes" },
    @{ Path = "Platforms\Android\NotificationService.cs"; Feature = "Notifica√ß√µes Android" },
    @{ Path = "Platforms\Android\Resources\drawable\notification_icon.xml"; Feature = "√çcone de Notifica√ß√£o" },
    @{ Path = "POLLING_NOTIFICATIONS_GUIDE.md"; Feature = "Documenta√ß√£o" }
)

$allFilesExist = $true
foreach ($file in $criticalFiles) {
    if (Test-Path $file.Path) {
        Write-Host "  ‚úÖ $($file.Feature): $($file.Path)" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå $($file.Feature): $($file.Path) N√ÉO ENCONTRADO" -ForegroundColor Red
        $allFilesExist = $false
    }
}

if (-not $allFilesExist) {
    Write-Host ""
    Write-Host "‚ùå Alguns arquivos cr√≠ticos est√£o faltando!" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üîß VERIFICANDO PERMISS√ïES NO ANDROIDMANIFEST..." -ForegroundColor Cyan

$manifestPath = "Platforms\Android\AndroidManifest.xml"
if (Test-Path $manifestPath) {
    $manifestContent = Get-Content $manifestPath -Raw
    
    $permissions = @(
        "POST_NOTIFICATIONS",
        "VIBRATE",
        "INTERNET",
        "ACCESS_NETWORK_STATE"
    )
    
    $allPermissionsPresent = $true
    foreach ($perm in $permissions) {
        if ($manifestContent -match $perm) {
            Write-Host "  ‚úÖ Permiss√£o $perm encontrada" -ForegroundColor Green
        } else {
            Write-Host "  ‚ùå Permiss√£o $perm FALTANDO" -ForegroundColor Red
            $allPermissionsPresent = $false
        }
    }
    
    if (-not $allPermissionsPresent) {
        Write-Host ""
        Write-Host "‚ö†Ô∏è  Algumas permiss√µes est√£o faltando no AndroidManifest.xml" -ForegroundColor Yellow
    }
} else {
    Write-Host "  ‚ùå AndroidManifest.xml n√£o encontrado!" -ForegroundColor Red
}

Write-Host ""
Write-Host "üèóÔ∏è  LIMPANDO E COMPILANDO PROJETO..." -ForegroundColor Cyan
Write-Host ""

# Limpar build anterior
Write-Host "  üßπ Limpando builds anteriores..." -ForegroundColor Yellow
dotnet clean -v quiet

# Build do projeto
Write-Host "  üî® Compilando projeto Android..." -ForegroundColor Yellow
$buildResult = dotnet build -f net8.0-android -v minimal 2>&1

if ($LASTEXITCODE -ne 0) {
    Write-Host ""
    Write-Host "‚ùå ERRO NA COMPILA√á√ÉO!" -ForegroundColor Red
    Write-Host ""
    Write-Host $buildResult
    exit 1
}

Write-Host "  ‚úÖ Compila√ß√£o bem-sucedida!" -ForegroundColor Green
Write-Host ""

# Verificar dispositivos Android conectados
Write-Host "üì± VERIFICANDO DISPOSITIVOS ANDROID..." -ForegroundColor Cyan
Write-Host ""

$adbPath = "adb"
try {
    $devices = & $adbPath devices 2>&1 | Select-String -Pattern "device$" -NotMatch "List"
    
    if ($devices) {
        Write-Host "  ‚úÖ Dispositivos encontrados:" -ForegroundColor Green
        & $adbPath devices
    } else {
        Write-Host "  ‚ö†Ô∏è  Nenhum dispositivo Android conectado" -ForegroundColor Yellow
        Write-Host "     - Conecte um dispositivo via USB ou" -ForegroundColor Yellow
        Write-Host "     - Inicie um emulador Android" -ForegroundColor Yellow
    }
} catch {
    Write-Host "  ‚ö†Ô∏è  ADB n√£o encontrado no PATH" -ForegroundColor Yellow
    Write-Host "     Certifique-se de ter Android SDK instalado" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  INSTRU√á√ïES DE TESTE" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

Write-Host "üéØ PARA INICIAR OS TESTES:" -ForegroundColor Yellow
Write-Host ""
Write-Host "1. INICIAR API BACKEND:" -ForegroundColor White
Write-Host "   cd ..\sistema-chamados-faculdade" -ForegroundColor Gray
Write-Host "   .\IniciarAPIMobile.ps1" -ForegroundColor Gray
Write-Host ""

Write-Host "2. EXECUTAR APP MOBILE:" -ForegroundColor White
Write-Host "   dotnet build -f net8.0-android && dotnet run -f net8.0-android" -ForegroundColor Gray
Write-Host ""

Write-Host "3. TESTAR FUNCIONALIDADES:" -ForegroundColor White
Write-Host ""
Write-Host "   üìù TIMELINE DE HIST√ìRICO:" -ForegroundColor Cyan
Write-Host "      - Abra um chamado existente" -ForegroundColor Gray
Write-Host "      - Role at√© a se√ß√£o 'Hist√≥rico'" -ForegroundColor Gray
Write-Host "      - Verifique eventos cronol√≥gicos" -ForegroundColor Gray
Write-Host ""

Write-Host "   üí¨ THREAD DE COMENT√ÅRIOS:" -ForegroundColor Cyan
Write-Host "      - Na tela de detalhes do chamado" -ForegroundColor Gray
Write-Host "      - Role at√© 'Coment√°rios'" -ForegroundColor Gray
Write-Host "      - Digite um coment√°rio e envie" -ForegroundColor Gray
Write-Host "      - Verifique se aparece na lista" -ForegroundColor Gray
Write-Host ""

Write-Host "   üì∑ UPLOAD DE ARQUIVOS:" -ForegroundColor Cyan
Write-Host "      - Em 'Novo Chamado' ou 'Detalhes'" -ForegroundColor Gray
Write-Host "      - Toque no bot√£o 'C√¢mera' ou 'Galeria'" -ForegroundColor Gray
Write-Host "      - Selecione uma imagem" -ForegroundColor Gray
Write-Host "      - Verifique thumbnail na galeria" -ForegroundColor Gray
Write-Host ""

Write-Host "   üîî POLLING E NOTIFICA√á√ïES:" -ForegroundColor Cyan
Write-Host "      - Conceda permiss√£o de notifica√ß√µes (Android 13+)" -ForegroundColor Gray
Write-Host "      - Aguarde 5 minutos OU force atualiza√ß√£o" -ForegroundColor Gray
Write-Host "      - Verifique notifica√ß√£o na barra de status" -ForegroundColor Gray
Write-Host "      - Toque na notifica√ß√£o para abrir chamado" -ForegroundColor Gray
Write-Host ""

Write-Host "4. FOR√áAR TESTE DE NOTIFICA√á√ÉO (MOCK):" -ForegroundColor White
Write-Host "   - Adicione bot√£o tempor√°rio no ChamadosListPage.xaml:" -ForegroundColor Gray
Write-Host '   <Button Text="üîî Simular Notifica√ß√£o"' -ForegroundColor DarkGray
Write-Host '           Command="{Binding TestarNotificacaoCommand}"/>' -ForegroundColor DarkGray
Write-Host ""
Write-Host "   - No ChamadosListViewModel.cs, adicione:" -ForegroundColor Gray
Write-Host '   public ICommand TestarNotificacaoCommand { get; }' -ForegroundColor DarkGray
Write-Host ""
Write-Host "   - No construtor:" -ForegroundColor Gray
Write-Host '   TestarNotificacaoCommand = new Command(() => {' -ForegroundColor DarkGray
Write-Host '       _pollingService.SimularAtualizacao();' -ForegroundColor DarkGray
Write-Host '   });' -ForegroundColor DarkGray
Write-Host ""

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  DEBUG E LOGS" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

Write-Host "üìä MONITORE OS LOGS NO VISUAL STUDIO:" -ForegroundColor Yellow
Write-Host ""
Write-Host "   [ChamadosListViewModel] - Opera√ß√µes da lista" -ForegroundColor Gray
Write-Host "   [ChamadoDetailViewModel] - Timeline, coment√°rios, anexos" -ForegroundColor Gray
Write-Host "   [ComentarioService] - Envio/recebimento de coment√°rios" -ForegroundColor Gray
Write-Host "   [AnexoService] - Upload de arquivos" -ForegroundColor Gray
Write-Host "   [PollingService] - Verifica√ß√µes peri√≥dicas" -ForegroundColor Gray
Write-Host "   [NotificationService] - Cria√ß√£o de notifica√ß√µes" -ForegroundColor Gray
Write-Host "   [MainActivity] - Navega√ß√£o via notifica√ß√µes" -ForegroundColor Gray
Write-Host ""

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  TROUBLESHOOTING" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

Write-Host "‚ùì SE COMENT√ÅRIOS N√ÉO APARECEM:" -ForegroundColor Yellow
Write-Host "   - Verifique log: [ComentarioService] Enviando coment√°rio..." -ForegroundColor Gray
Write-Host "   - Confirme que API est√° rodando na porta 5246" -ForegroundColor Gray
Write-Host "   - Verifique IP no appsettings.json (192.168.x.x)" -ForegroundColor Gray
Write-Host ""

Write-Host "‚ùì SE UPLOAD FALHA:" -ForegroundColor Yellow
Write-Host "   - Verifique permiss√µes de c√¢mera/storage" -ForegroundColor Gray
Write-Host "   - Confirme MediaPicker.CapturePhotoAsync() no log" -ForegroundColor Gray
Write-Host "   - Tamanho m√°ximo: 5MB por arquivo" -ForegroundColor Gray
Write-Host ""

Write-Host "‚ùì SE NOTIFICA√á√ïES N√ÉO APARECEM:" -ForegroundColor Yellow
Write-Host "   - Android 13+: Verifique permiss√£o POST_NOTIFICATIONS" -ForegroundColor Gray
Write-Host "   - Configura√ß√µes > Apps > Sistema de Chamados > Notifica√ß√µes" -ForegroundColor Gray
Write-Host "   - Veja log: [NotificationService] Exibindo notifica√ß√£o..." -ForegroundColor Gray
Write-Host ""

Write-Host "‚ùì SE POLLING N√ÉO DISPARA:" -ForegroundColor Yellow
Write-Host "   - Verifique log: [PollingService] Timer iniciado..." -ForegroundColor Gray
Write-Host "   - Use SimularAtualizacao() para for√ßar" -ForegroundColor Gray
Write-Host "   - Timer padr√£o: 5 minutos (300000ms)" -ForegroundColor Gray
Write-Host ""

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  DOCUMENTA√á√ÉO COMPLETA" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

Write-Host "üìñ Consulte os guias detalhados:" -ForegroundColor Yellow
Write-Host "   - POLLING_NOTIFICATIONS_GUIDE.md (Este diret√≥rio)" -ForegroundColor Gray
Write-Host "   - README_MOBILE.md (Overview geral)" -ForegroundColor Gray
Write-Host "   - COMO_TESTAR_MOBILE.md (Testes gerais)" -ForegroundColor Gray
Write-Host ""

Write-Host "‚úÖ SISTEMA PRONTO PARA TESTES!" -ForegroundColor Green
Write-Host ""
Write-Host "Pressione ENTER para iniciar o app mobile..." -ForegroundColor Yellow
Read-Host

# Executar app
Write-Host ""
Write-Host "üöÄ Iniciando aplicativo Android..." -ForegroundColor Cyan
Write-Host ""

dotnet run -f net8.0-android
